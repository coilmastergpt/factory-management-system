"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/issues/route";
exports.ids = ["app/api/issues/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fissues%2Froute&page=%2Fapi%2Fissues%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fissues%2Froute.ts&appDir=C%3A%5CUsers%5Cthoma%5COneDrive%5C%EB%B0%94%ED%83%95%20%ED%99%94%EB%A9%B4%5CLine%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cthoma%5COneDrive%5C%EB%B0%94%ED%83%95%20%ED%99%94%EB%A9%B4%5CLine&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fissues%2Froute&page=%2Fapi%2Fissues%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fissues%2Froute.ts&appDir=C%3A%5CUsers%5Cthoma%5COneDrive%5C%EB%B0%94%ED%83%95%20%ED%99%94%EB%A9%B4%5CLine%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cthoma%5COneDrive%5C%EB%B0%94%ED%83%95%20%ED%99%94%EB%A9%B4%5CLine&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_thoma_OneDrive_Line_app_api_issues_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/issues/route.ts */ \"(rsc)/./app/api/issues/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/issues/route\",\n        pathname: \"/api/issues\",\n        filename: \"route\",\n        bundlePath: \"app/api/issues/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\thoma\\\\OneDrive\\\\바탕 화면\\\\Line\\\\app\\\\api\\\\issues\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_thoma_OneDrive_Line_app_api_issues_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/issues/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZpc3N1ZXMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmlzc3VlcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmlzc3VlcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUN0aG9tYSU1Q09uZURyaXZlJTVDJUVCJUIwJTk0JUVEJTgzJTk1JTIwJUVEJTk5JTk0JUVCJUE5JUI0JTVDTGluZSU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDdGhvbWElNUNPbmVEcml2ZSU1QyVFQiVCMCU5NCVFRCU4MyU5NSUyMCVFRCU5OSU5NCVFQiVBOSVCNCU1Q0xpbmUmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDbUI7QUFDaEc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUM2Sjs7QUFFN0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mYWN0b3J5LW1hbmFnZW1lbnQtc3lzdGVtLz8xOTRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXHRob21hXFxcXE9uZURyaXZlXFxcXOuwlO2DlSDtmZTrqbRcXFxcTGluZVxcXFxhcHBcXFxcYXBpXFxcXGlzc3Vlc1xcXFxyb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvaXNzdWVzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvaXNzdWVzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9pc3N1ZXMvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFx0aG9tYVxcXFxPbmVEcml2ZVxcXFzrsJTtg5Ug7ZmU66m0XFxcXExpbmVcXFxcYXBwXFxcXGFwaVxcXFxpc3N1ZXNcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvaXNzdWVzL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fissues%2Froute&page=%2Fapi%2Fissues%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fissues%2Froute.ts&appDir=C%3A%5CUsers%5Cthoma%5COneDrive%5C%EB%B0%94%ED%83%95%20%ED%99%94%EB%A9%B4%5CLine%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cthoma%5COneDrive%5C%EB%B0%94%ED%83%95%20%ED%99%94%EB%A9%B4%5CLine&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/issues/route.ts":
/*!*********************************!*\
  !*** ./app/api/issues/route.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   mockIssues: () => (/* binding */ mockIssues)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\n\n// 데이터 파일 경로 설정\nconst DATA_DIR = path__WEBPACK_IMPORTED_MODULE_2___default().join(process.cwd(), \"data\");\nconst ISSUES_FILE = path__WEBPACK_IMPORTED_MODULE_2___default().join(DATA_DIR, \"issues.json\");\nconst USERS_FILE = path__WEBPACK_IMPORTED_MODULE_2___default().join(DATA_DIR, \"users.json\");\n// 모의 데이터 생성\nconst workers = [\n    {\n        id: \"worker-1\",\n        name: \"김작업자\",\n        email: \"kim@example.com\",\n        companyId: \"EMP001\"\n    },\n    {\n        id: \"worker-2\",\n        name: \"이엔지니어\",\n        email: \"lee@example.com\",\n        companyId: \"EMP002\"\n    },\n    {\n        id: \"worker-3\",\n        name: \"박기술자\",\n        email: \"park@example.com\",\n        companyId: \"EMP003\"\n    },\n    {\n        id: \"worker-4\",\n        name: \"최관리자\",\n        email: \"choi@example.com\",\n        companyId: \"EMP004\"\n    },\n    {\n        id: \"worker-5\",\n        name: \"정감독관\",\n        email: \"jung@example.com\",\n        companyId: \"EMP005\"\n    }\n];\nconst issueTypes = [\n    {\n        id: \"type-1\",\n        name: \"설비 문제\",\n        value: \"설비 문제\"\n    },\n    {\n        id: \"type-2\",\n        name: \"원자재 문제\",\n        value: \"원자재 문제\"\n    },\n    {\n        id: \"type-3\",\n        name: \"작업자 문제\",\n        value: \"작업자 문제\"\n    },\n    {\n        id: \"type-4\",\n        name: \"지그 문제\",\n        value: \"지그 문제\"\n    }\n];\n// 사용자 데이터 로드\nconst loadUsers = ()=>{\n    try {\n        if (!fs__WEBPACK_IMPORTED_MODULE_1___default().existsSync(USERS_FILE)) {\n            return [];\n        }\n        const data = fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(USERS_FILE, \"utf8\");\n        return JSON.parse(data);\n    } catch (error) {\n        console.error(\"사용자 데이터 로드 오류:\", error);\n        return [];\n    }\n};\n// 모의 이슈 데이터 생성\nconst generateMockIssues = (count)=>{\n    const statuses = [\n        \"OPEN\",\n        \"IN_PROGRESS\",\n        \"RESOLVED\",\n        \"CLOSED\"\n    ];\n    const priorities = [\n        \"LOW\",\n        \"MEDIUM\",\n        \"HIGH\",\n        \"CRITICAL\"\n    ];\n    const departments = [\n        \"생산\",\n        \"품질\",\n        \"유지보수\",\n        \"안전\"\n    ];\n    return Array.from({\n        length: count\n    }).map((_, index)=>{\n        const createdBy = workers[Math.floor(Math.random() * workers.length)];\n        const assignedToIndex = Math.floor(Math.random() * (workers.length + 1)) - 1;\n        const assignedTo = assignedToIndex >= 0 ? workers[assignedToIndex] : null;\n        const issueType = issueTypes[Math.floor(Math.random() * issueTypes.length)].value;\n        const createdDate = new Date();\n        createdDate.setDate(createdDate.getDate() - Math.floor(Math.random() * 30));\n        const updatedDate = new Date(createdDate);\n        updatedDate.setDate(updatedDate.getDate() + Math.floor(Math.random() * 5));\n        // 해결된 이슈인 경우 완료일 추가\n        const status = statuses[Math.floor(Math.random() * statuses.length)];\n        let resolvedAt = null;\n        if (status === \"RESOLVED\" || status === \"CLOSED\") {\n            resolvedAt = new Date(updatedDate);\n            resolvedAt.setDate(resolvedAt.getDate() + Math.floor(Math.random() * 3) + 1);\n        }\n        return {\n            id: `issue-${index + 1}`,\n            title: `${departments[Math.floor(Math.random() * departments.length)]} 부서 문제`,\n            description: `이슈에 대한 상세 설명입니다. 이 문제는 ${createdDate.toLocaleDateString()}에 발생했습니다.`,\n            status: status,\n            priority: priorities[Math.floor(Math.random() * priorities.length)],\n            department: departments[Math.floor(Math.random() * departments.length)],\n            issueType: issueType,\n            assignedTo: assignedTo,\n            createdBy: createdBy,\n            createdAt: createdDate.toISOString(),\n            updatedAt: updatedDate.toISOString(),\n            resolvedAt: resolvedAt ? resolvedAt.toISOString() : null,\n            solution: resolvedAt ? `이슈 ${index + 1}에 대한 해결 방법입니다.` : null\n        };\n    });\n};\n// 이슈 데이터 로드\nconst loadIssues = ()=>{\n    try {\n        // 데이터 디렉토리가 없으면 생성\n        if (!fs__WEBPACK_IMPORTED_MODULE_1___default().existsSync(DATA_DIR)) {\n            fs__WEBPACK_IMPORTED_MODULE_1___default().mkdirSync(DATA_DIR, {\n                recursive: true\n            });\n        }\n        // 이슈 파일이 없으면 초기 데이터 생성\n        if (!fs__WEBPACK_IMPORTED_MODULE_1___default().existsSync(ISSUES_FILE)) {\n            const initialIssues = generateMockIssues(50);\n            fs__WEBPACK_IMPORTED_MODULE_1___default().writeFileSync(ISSUES_FILE, JSON.stringify(initialIssues, null, 2));\n            return initialIssues;\n        }\n        // 파일에서 이슈 데이터 로드\n        const data = fs__WEBPACK_IMPORTED_MODULE_1___default().readFileSync(ISSUES_FILE, \"utf8\");\n        // 파일이 비어있거나 유효하지 않은 JSON인 경우 초기 데이터 생성\n        if (!data || data.trim() === \"[]\" || data.trim() === \"\") {\n            const initialIssues = generateMockIssues(50);\n            fs__WEBPACK_IMPORTED_MODULE_1___default().writeFileSync(ISSUES_FILE, JSON.stringify(initialIssues, null, 2));\n            return initialIssues;\n        }\n        try {\n            return JSON.parse(data);\n        } catch (parseError) {\n            console.error(\"JSON 파싱 오류, 초기 데이터 생성:\", parseError);\n            const initialIssues = generateMockIssues(50);\n            fs__WEBPACK_IMPORTED_MODULE_1___default().writeFileSync(ISSUES_FILE, JSON.stringify(initialIssues, null, 2));\n            return initialIssues;\n        }\n    } catch (error) {\n        console.error(\"이슈 데이터 로드 중 오류 발생:\", error);\n        return generateMockIssues(50); // 오류 발생 시 기본 데이터 반환\n    }\n};\n// 이슈 데이터 저장\nconst saveIssues = (issues)=>{\n    try {\n        // 데이터 디렉토리가 없으면 생성\n        if (!fs__WEBPACK_IMPORTED_MODULE_1___default().existsSync(DATA_DIR)) {\n            fs__WEBPACK_IMPORTED_MODULE_1___default().mkdirSync(DATA_DIR, {\n                recursive: true\n            });\n        }\n        fs__WEBPACK_IMPORTED_MODULE_1___default().writeFileSync(ISSUES_FILE, JSON.stringify(issues, null, 2));\n    } catch (error) {\n        console.error(\"이슈 데이터 저장 중 오류 발생:\", error);\n    }\n};\n// 이슈 데이터 로드\nlet mockIssues = loadIssues();\nasync function GET(request) {\n    try {\n        // 최신 이슈 데이터 로드\n        mockIssues = loadIssues();\n        // URL에서 필터, 검색, 정렬, 페이지네이션 파라미터 추출\n        const url = new URL(request.url);\n        const searchParams = url.searchParams;\n        // 필터 파라미터 추출\n        const statusFilter = searchParams.get(\"status\");\n        const priorityFilter = searchParams.get(\"priority\");\n        const departmentFilter = searchParams.get(\"department\");\n        const assignedToFilter = searchParams.get(\"assignedToId\");\n        const createdByFilter = searchParams.get(\"createdById\");\n        const issueTypeFilter = searchParams.get(\"issueType\");\n        // 날짜 필터 추출\n        const startDate = searchParams.get(\"startDate\");\n        const endDate = searchParams.get(\"endDate\");\n        const month = searchParams.get(\"month\");\n        // 검색어 추출\n        const searchTerm = searchParams.get(\"search\");\n        // 정렬 파라미터 추출\n        const sortField = searchParams.get(\"sort[field]\") || \"createdAt\";\n        const sortOrder = searchParams.get(\"sort[order]\") || \"desc\";\n        // 페이지네이션 파라미터 추출\n        const page = parseInt(searchParams.get(\"page\") || \"1\");\n        const limit = parseInt(searchParams.get(\"limit\") || \"10\");\n        // 필터링 적용\n        let filteredIssues = [\n            ...mockIssues\n        ];\n        if (statusFilter) {\n            filteredIssues = filteredIssues.filter((issue)=>issue.status === statusFilter);\n        }\n        if (priorityFilter) {\n            filteredIssues = filteredIssues.filter((issue)=>issue.priority === priorityFilter);\n        }\n        if (departmentFilter) {\n            filteredIssues = filteredIssues.filter((issue)=>issue.department === departmentFilter);\n        }\n        if (assignedToFilter) {\n            filteredIssues = filteredIssues.filter((issue)=>issue.assignedTo && issue.assignedTo.id === assignedToFilter);\n        }\n        if (createdByFilter) {\n            filteredIssues = filteredIssues.filter((issue)=>issue.createdBy && issue.createdBy.id === createdByFilter);\n        }\n        if (issueTypeFilter) {\n            filteredIssues = filteredIssues.filter((issue)=>issue.issueType === issueTypeFilter);\n        }\n        // 검색어 적용\n        if (searchTerm) {\n            const searchLower = searchTerm.toLowerCase();\n            filteredIssues = filteredIssues.filter((issue)=>issue.title.toLowerCase().includes(searchLower) || issue.description.toLowerCase().includes(searchLower));\n        }\n        // 날짜 필터 적용\n        if (startDate && endDate) {\n            const start = new Date(startDate);\n            const end = new Date(endDate);\n            end.setHours(23, 59, 59, 999); // 종료일의 끝으로 설정\n            filteredIssues = filteredIssues.filter((issue)=>{\n                const createdAt = new Date(issue.createdAt);\n                return createdAt >= start && createdAt <= end;\n            });\n        } else if (month) {\n            const currentYear = new Date().getFullYear();\n            const monthIndex = parseInt(month) - 1; // JavaScript의 월은 0부터 시작\n            filteredIssues = filteredIssues.filter((issue)=>{\n                const createdAt = new Date(issue.createdAt);\n                return createdAt.getMonth() === monthIndex;\n            });\n        }\n        // 정렬 적용\n        filteredIssues.sort((a, b)=>{\n            const aValue = a[sortField];\n            const bValue = b[sortField];\n            if (typeof aValue === \"string\" && typeof bValue === \"string\") {\n                return sortOrder === \"asc\" ? aValue.localeCompare(bValue) : bValue.localeCompare(aValue);\n            }\n            // 날짜 비교\n            if (sortField === \"createdAt\" || sortField === \"updatedAt\") {\n                return sortOrder === \"asc\" ? new Date(aValue).getTime() - new Date(bValue).getTime() : new Date(bValue).getTime() - new Date(aValue).getTime();\n            }\n            return 0;\n        });\n        // 페이지네이션 적용\n        const startIndex = (page - 1) * limit;\n        const endIndex = startIndex + limit;\n        const paginatedIssues = filteredIssues.slice(startIndex, endIndex);\n        // 응답 데이터 구성\n        const response = {\n            issues: paginatedIssues,\n            pagination: {\n                total: filteredIssues.length,\n                page,\n                limit,\n                totalPages: Math.ceil(filteredIssues.length / limit)\n            }\n        };\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(response);\n    } catch (error) {\n        console.error(\"이슈 조회 중 오류 발생:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"이슈 조회 중 오류가 발생했습니다.\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const data = await request.json();\n        console.log(\"이슈 생성 요청 데이터:\", data);\n        // 필수 필드 검증\n        if (!data.title || !data.createdById) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"제목과 작업자는 필수 항목입니다.\"\n            }, {\n                status: 400\n            });\n        }\n        // 작업자 정보 찾기\n        const createdBy = workers.find((w)=>w.id === data.createdById);\n        if (!createdBy) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"유효하지 않은 작업자 ID입니다.\"\n            }, {\n                status: 400\n            });\n        }\n        // 담당자 정보 찾기 (있는 경우)\n        let assignedTo = null;\n        if (data.assignedToId) {\n            // 먼저 workers 배열에서 찾기\n            assignedTo = workers.find((w)=>w.id === data.assignedToId);\n            // workers에 없으면 사용자 데이터에서 찾기\n            if (!assignedTo) {\n                const users = loadUsers();\n                const user = users.find((u)=>u.id === data.assignedToId);\n                if (user) {\n                    assignedTo = {\n                        id: user.id,\n                        name: user.name,\n                        email: user.email,\n                        companyId: user.companyId || \"\"\n                    };\n                } else {\n                    console.warn(`담당자 ID ${data.assignedToId}를 찾을 수 없습니다. 담당자 없이 이슈를 생성합니다.`);\n                }\n            }\n        }\n        // 새 이슈 생성\n        const now = new Date();\n        const newIssue = {\n            id: `issue-${(0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()}`,\n            title: data.title,\n            description: data.description || \"\",\n            status: \"OPEN\",\n            priority: data.priority || \"MEDIUM\",\n            department: data.department || \"생산\",\n            issueType: data.issueType || \"\",\n            assignedTo: assignedTo,\n            createdBy: createdBy,\n            createdAt: now.toISOString(),\n            updatedAt: now.toISOString(),\n            resolvedAt: null,\n            solution: null\n        };\n        // 이슈 목록에 추가\n        mockIssues.push(newIssue);\n        // 이슈 데이터 저장\n        saveIssues(mockIssues);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(newIssue, {\n            status: 201\n        });\n    } catch (error) {\n        console.error(\"이슈 생성 중 오류 발생:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"이슈 생성 중 오류가 발생했습니다.\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/issues/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/uuid"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fissues%2Froute&page=%2Fapi%2Fissues%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fissues%2Froute.ts&appDir=C%3A%5CUsers%5Cthoma%5COneDrive%5C%EB%B0%94%ED%83%95%20%ED%99%94%EB%A9%B4%5CLine%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cthoma%5COneDrive%5C%EB%B0%94%ED%83%95%20%ED%99%94%EB%A9%B4%5CLine&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();